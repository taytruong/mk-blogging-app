{"version":3,"file":"static/js/496.47047875.chunk.js","mappings":"gZA+BAA,EAAAA,MAAMC,SAAS,wBAAyBC,EAAAA,GAExC,MAkQA,EAlQmBC,KACjB,MAAOC,IAAUC,EAAAA,EAAAA,MACXC,EAASF,EAAOG,IAAI,OACnBC,EAASC,IAAcC,EAAAA,EAAAA,UAAS,KAEjC,QACJC,EAAO,MACPC,EAAK,SACLC,EAAQ,aACRC,EAAY,UACZC,EAAS,MACTC,EACAC,WAAW,QAAEC,EAAO,aAAEC,KACpBC,EAAAA,EAAAA,IAAQ,CACVC,KAAM,WACNC,cAAe,CACbC,MAAO,GACPC,KAAM,GACNC,OAAQ,EACRC,SAAU,CAAC,EACXC,KAAK,EACLC,MAAO,GACPC,KAAM,CAAC,KAGLC,EAAWf,EAAU,SACrBgB,EAAYhB,EAAU,eAEtB,MAAEa,EAAK,SAAEI,EAAQ,SAAEC,EAAQ,kBAAEC,EAAiB,kBAAEC,IACpDC,EAAAA,EAAAA,GAAiBvB,EAAUE,EAAWgB,GAExCM,iBACE,MAAMC,GAASC,EAAAA,EAAAA,IAAIC,EAAAA,GAAI,QAASlC,SAC1BmC,EAAAA,EAAAA,IAAUH,EAAQ,CACtBV,MAAO,IAEX,IACA,MAAMc,EAAc9B,EAAM,UACpB+B,EAAW/B,EAAM,QAEvBgC,EAAAA,EAAAA,YAAU,KACRZ,EAASF,EAAS,GACjB,CAACA,EAAUE,KAEdY,EAAAA,EAAAA,YAAU,MACRP,iBACE,IAAK/B,EAAQ,OACb,MAAMuC,GAASN,EAAAA,EAAAA,IAAIC,EAAAA,GAAI,QAASlC,GAC1BwC,QAAoBC,EAAAA,EAAAA,IAAOF,GACR,IAADG,EAAAC,EAApBH,EAAYI,SACdlC,EAAM8B,EAAYI,QAClBC,GAAoC,QAAlBH,EAAAF,EAAYI,cAAM,IAAAF,OAAA,EAAlBA,EAAoBtB,WAAY,IAClDjB,GAA6B,QAAlBwC,EAAAH,EAAYI,cAAM,IAAAD,OAAA,EAAlBA,EAAoBzC,UAAW,KAE9C,CACA4C,EAAW,GACV,CAAC9C,EAAQU,IAEZ,MAAOqC,EAAYC,IAAiB5C,EAAAA,EAAAA,UAAS,KACtC6C,EAAgBJ,IAAqBzC,EAAAA,EAAAA,UAAS,KAErDkC,EAAAA,EAAAA,YAAU,MACRP,iBACE,MAAMC,GAASkB,EAAAA,EAAAA,IAAWhB,EAAAA,GAAI,cACxBiB,GAAIC,EAAAA,EAAAA,GAAMpB,GAAQqB,EAAAA,EAAAA,IAAM,SAAU,KAAM,IACxCC,QAAsBC,EAAAA,EAAAA,IAAQJ,GACpC,IAAIK,EAAS,GACbF,EAAcG,SAASxB,IACrBuB,EAAOE,KAAK,CACVC,GAAI1B,EAAI0B,MACL1B,EAAIW,QACP,IAEJI,EAAcQ,EAChB,CACAI,EAAmB,GAClB,IAEH,MAuBMC,GAAUC,EAAAA,EAAAA,UACd,MACEC,QAAS,CACP,CAAC,OAAQ,SAAU,YAAa,UAChC,CAAC,cACD,CAAC,CAAEC,OAAQ,GAAK,CAAEA,OAAQ,IAC1B,CAAC,CAAEC,KAAM,WAAa,CAAEA,KAAM,WAC9B,CAAC,CAAED,OAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAG,KAC9B,CAAC,OAAQ,UAEXE,cAAe,CAEbC,OAAQpC,UAEN,MAAMqC,EAAe,IAAIC,SACzBD,EAAaE,OAAO,QAASC,GAC7B,MAAMC,QAAiBC,EAAAA,EAAAA,GAAM,CAC3BC,OAAQ,OACRC,ICvJZ,sEDwJY/B,KAAMwB,EACNQ,QAAS,CACP,eAAgB,yBAIpB,OADAC,QAAQC,IAAI,qCAA4BN,GACjCA,EAAS5B,KAAKA,KAAK+B,GAAG,MAInC,IAEF,OAAK3E,GAGH+E,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAgB,CACflE,MAAM,cACNmE,KAAK,yBAEPL,EAAAA,EAAAA,MAAA,QAAMM,SAAU7E,GApDMuB,UACxB,IAAInB,EAAS,OACb,MAAM2B,GAASN,EAAAA,EAAAA,IAAIC,EAAAA,GAAI,QAASlC,GAChCsF,EAAOnE,OAASoE,OAAOD,EAAOnE,QAC9BmE,EAAOpE,KAAOsE,IAAQF,EAAOpE,MAAQoE,EAAOrE,MAAO,CAAEwE,OAAO,UACtDtD,EAAAA,EAAAA,IAAUI,EAAQ,IACnB+C,EACHhE,QACApB,YAEFwF,EAAAA,GAAMC,QAAQ,4BAA4B,IA0CQV,SAAA,EAC9CF,EAAAA,EAAAA,MAAA,OAAKa,UAAU,cAAaX,SAAA,EAC1BF,EAAAA,EAAAA,MAACc,EAAAA,EAAK,CAAAZ,SAAA,EACJC,EAAAA,EAAAA,KAACY,EAAAA,EAAK,CAAAb,SAAC,WACPC,EAAAA,EAAAA,KAACa,EAAAA,EAAK,CACJ1F,QAASA,EACT2F,YAAY,mBACZC,KAAK,QACLC,UAAQ,QAGZnB,EAAAA,EAAAA,MAACc,EAAAA,EAAK,CAAAZ,SAAA,EACJC,EAAAA,EAAAA,KAACY,EAAAA,EAAK,CAAAb,SAAC,UACPC,EAAAA,EAAAA,KAACa,EAAAA,EAAK,CACJ1F,QAASA,EACT2F,YAAY,kBACZC,KAAK,gBAIXlB,EAAAA,EAAAA,MAAA,OAAKa,UAAU,cAAaX,SAAA,EAC1BF,EAAAA,EAAAA,MAACc,EAAAA,EAAK,CAAAZ,SAAA,EACJC,EAAAA,EAAAA,KAACY,EAAAA,EAAK,CAAAb,SAAC,WACPC,EAAAA,EAAAA,KAACiB,EAAAA,EAAW,CACVP,UAAU,YACVQ,SAAUxE,EACVC,kBAAmBA,EACnBF,SAAUA,EACVL,MAAOA,QAGXyD,EAAAA,EAAAA,MAACc,EAAAA,EAAK,CAAAZ,SAAA,EACJC,EAAAA,EAAAA,KAACY,EAAAA,EAAK,CAAAb,SAAC,cACPF,EAAAA,EAAAA,MAACsB,EAAAA,EAAQ,CAAApB,SAAA,EACPC,EAAAA,EAAAA,KAACmB,EAAAA,EAASC,OAAM,CAACN,YAAY,yBAC7Bd,EAAAA,EAAAA,KAACmB,EAAAA,EAASE,KAAI,CAAAtB,SACXlC,EAAWyD,OAAS,GACnBzD,EAAW0D,KAAKC,IACdxB,EAAAA,EAAAA,KAACmB,EAAAA,EAASM,OAAM,CAEdC,QAASA,IAtGH7E,WACxB,MAAMC,GAASC,EAAAA,EAAAA,IAAIC,EAAAA,GAAI,aAAcwE,EAAK/C,IACpCkD,QAAgBpE,EAAAA,EAAAA,IAAOT,GAC7BzB,EAAS,WAAY,CACnBoD,GAAIkD,EAAQlD,MACTkD,EAAQjE,SAEbC,EAAkB6D,EAAK,EA+FUI,CAAkBJ,GAAMzB,SAEtCyB,EAAKT,MAHDS,EAAK/C,YAQL,OAAdV,QAAc,IAAdA,OAAc,EAAdA,EAAgBgD,QACff,EAAAA,EAAAA,KAAA,QAAMU,UAAU,6EAA4EX,SAC3E,OAAdhC,QAAc,IAAdA,OAAc,EAAdA,EAAgBgD,cAKzBf,EAAAA,EAAAA,KAAA,OAAKU,UAAU,QAAOX,UACpBF,EAAAA,EAAAA,MAACc,EAAAA,EAAK,CAAAZ,SAAA,EACJC,EAAAA,EAAAA,KAACY,EAAAA,EAAK,CAAAb,SAAC,aACPC,EAAAA,EAAAA,KAAA,OAAKU,UAAU,uBAAsBX,UACnCC,EAAAA,EAAAA,KAAC6B,IAAU,CACTlD,QAASA,EACTmD,MAAM,OACNC,MAAO/G,EACPkG,SAAUjG,YAKlB4E,EAAAA,EAAAA,MAAA,OAAKa,UAAU,cAAaX,SAAA,EAC1BF,EAAAA,EAAAA,MAACc,EAAAA,EAAK,CAAAZ,SAAA,EACJC,EAAAA,EAAAA,KAACY,EAAAA,EAAK,CAAAb,SAAC,kBACPC,EAAAA,EAAAA,KAACgC,EAAAA,EAAM,CACLC,IAAiB,IAAb9E,EACJuE,QAASA,IAAMrG,EAAS,OAAQ8B,SAGpC0C,EAAAA,EAAAA,MAACc,EAAAA,EAAK,CAAAZ,SAAA,EACJC,EAAAA,EAAAA,KAACY,EAAAA,EAAK,CAAAb,SAAC,YACPF,EAAAA,EAAAA,MAACqC,EAAAA,EAAe,CAAAnC,SAAA,EACdC,EAAAA,EAAAA,KAACmC,EAAAA,EAAK,CACJpB,KAAK,SACL5F,QAASA,EACTiH,QAAS/B,OAAOnD,KAAiBmF,EAAAA,GAAWC,SAC5CP,MAAOM,EAAAA,GAAWC,SAASvC,SAC5B,cAGDC,EAAAA,EAAAA,KAACmC,EAAAA,EAAK,CACJpB,KAAK,SACL5F,QAASA,EACTiH,QAAS/B,OAAOnD,KAAiBmF,EAAAA,GAAWE,QAC5CR,MAAOM,EAAAA,GAAWE,QAAQxC,SAC3B,aAGDC,EAAAA,EAAAA,KAACmC,EAAAA,EAAK,CACJpB,KAAK,SACL5F,QAASA,EACTiH,QAAS/B,OAAOnD,KAAiBmF,EAAAA,GAAWG,SAC5CT,MAAOM,EAAAA,GAAWG,SAASzC,SAC5B,qBAMPC,EAAAA,EAAAA,KAACyC,EAAAA,EAAM,CACLC,KAAK,SACLhC,UAAU,oBACViC,UAAWhH,EACXiH,SAAUjH,EAAaoE,SACxB,sBAtHa,IA0Hf,C","sources":["module/post/PostUpdate.js","config/apiConfig.js"],"sourcesContent":["import { Button } from \"components/button\";\r\nimport { Radio } from \"components/checkbox\";\r\nimport { Dropdown } from \"components/dropdown\";\r\nimport { Field, FieldCheckboxes } from \"components/field\";\r\nimport ImageUpload from \"components/image/ImageUpload\";\r\nimport { Input } from \"components/input\";\r\nimport { Label } from \"components/label\";\r\nimport Toggle from \"components/toggle/Toggle\";\r\nimport { db } from \"firebase-app/firebase-config\";\r\nimport {\r\n  collection,\r\n  doc,\r\n  getDoc,\r\n  getDocs,\r\n  query,\r\n  updateDoc,\r\n  where,\r\n} from \"firebase/firestore\";\r\nimport useFirebaseImage from \"hooks/useFirebaseImage\";\r\nimport DashboardHeading from \"module/dashboard/DashboardHeading\";\r\nimport React, { useEffect, useMemo, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\nimport { postStatus } from \"utils/constants\";\r\nimport ReactQuill, { Quill } from \"react-quill\";\r\nimport \"react-quill/dist/quill.snow.css\";\r\nimport { toast } from \"react-toastify\";\r\nimport ImageUploader from \"quill-image-uploader\";\r\nimport axios from \"axios\";\r\nimport { imgbbAPI } from \"../../config/apiConfig\";\r\nimport slugify from \"slugify\";\r\nQuill.register(\"modules/imageUploader\", ImageUploader);\r\n\r\nconst PostUpdate = () => {\r\n  const [params] = useSearchParams();\r\n  const postId = params.get(\"id\");\r\n  const [content, setContent] = useState(\"\");\r\n\r\n  const {\r\n    control,\r\n    watch,\r\n    setValue,\r\n    handleSubmit,\r\n    getValues,\r\n    reset,\r\n    formState: { isValid, isSubmitting },\r\n  } = useForm({\r\n    mode: \"onChange\",\r\n    defaultValues: {\r\n      title: \"\",\r\n      slug: \"\",\r\n      status: 2,\r\n      category: {},\r\n      hot: false,\r\n      image: \"\",\r\n      user: {},\r\n    },\r\n  });\r\n  const imageUrl = getValues(\"image\");\r\n  const imageName = getValues(\"image_name\");\r\n\r\n  const { image, setImage, progress, handleSelectImage, handleDeleteImage } =\r\n    useFirebaseImage(setValue, getValues, imageName, deletePostImage);\r\n\r\n  async function deletePostImage() {\r\n    const colRef = doc(db, \"posts\", postId);\r\n    await updateDoc(colRef, {\r\n      image: \"\",\r\n    });\r\n  }\r\n  const watchStatus = watch(\"status\");\r\n  const watchHot = watch(\"hot\");\r\n\r\n  useEffect(() => {\r\n    setImage(imageUrl);\r\n  }, [imageUrl, setImage]);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      if (!postId) return;\r\n      const docRef = doc(db, \"posts\", postId);\r\n      const docSnapshot = await getDoc(docRef);\r\n      if (docSnapshot.data()) {\r\n        reset(docSnapshot.data());\r\n        setSelectCategory(docSnapshot.data()?.category || \"\"); // ~ displayed setCategory\r\n        setContent(docSnapshot.data()?.content || \" \");\r\n      }\r\n    }\r\n    fetchData();\r\n  }, [postId, reset]);\r\n\r\n  const [categories, setCategories] = useState([]);\r\n  const [selectCategory, setSelectCategory] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    async function getCategoriesData() {\r\n      const colRef = collection(db, \"categories\");\r\n      const q = query(colRef, where(\"status\", \"==\", 1));\r\n      const querySnapshot = await getDocs(q);\r\n      let result = [];\r\n      querySnapshot.forEach((doc) => {\r\n        result.push({\r\n          id: doc.id,\r\n          ...doc.data(),\r\n        });\r\n      });\r\n      setCategories(result);\r\n    }\r\n    getCategoriesData();\r\n  }, []);\r\n\r\n  const handleClickOption = async (item) => {\r\n    const colRef = doc(db, \"categories\", item.id);\r\n    const docData = await getDoc(colRef);\r\n    setValue(\"category\", {\r\n      id: docData.id,\r\n      ...docData.data(),\r\n    });\r\n    setSelectCategory(item);\r\n  };\r\n\r\n  const updatePostHandler = async (values) => {\r\n    if(!isValid) return\r\n    const docRef = doc(db, \"posts\", postId);\r\n    values.status = Number(values.status)\r\n    values.slug = slugify(values.slug || values.title, { lower: true });\r\n    await updateDoc(docRef, {\r\n      ...values,\r\n      image,\r\n      content,\r\n    });\r\n    toast.success(\"Update post successfully!\");\r\n  };\r\n\r\n  const modules = useMemo(\r\n    () => ({\r\n      toolbar: [\r\n        [\"bold\", \"italic\", \"underline\", \"strike\"],\r\n        [\"blockquote\"],\r\n        [{ header: 1 }, { header: 2 }], // custom button values\r\n        [{ list: \"ordered\" }, { list: \"bullet\" }],\r\n        [{ header: [1, 2, 3, 4, 5, 6, false] }],\r\n        [\"link\", \"image\"],\r\n      ],\r\n      imageUploader: {\r\n        // web ~ imgbbAPI\r\n        upload: async (file) => {\r\n          // display img\r\n          const bodyFormData = new FormData();\r\n          bodyFormData.append(\"image\", file);\r\n          const response = await axios({\r\n            method: \"post\",\r\n            url: imgbbAPI,\r\n            data: bodyFormData,\r\n            headers: {\r\n              \"Content-Type\": \"multipart/form-data\",\r\n            },\r\n          });\r\n          console.log(\"🚀 ~ upload: ~ response:\", response);\r\n          return response.data.data.url;\r\n        },\r\n      },\r\n    }),\r\n    []\r\n  );\r\n  if (!postId) return null;\r\n\r\n  return (\r\n    <>\r\n      <DashboardHeading\r\n        title=\"Update post\"\r\n        desc=\"Update post content\"\r\n      ></DashboardHeading>\r\n      <form onSubmit={handleSubmit(updatePostHandler)}>\r\n        <div className=\"form-layout\">\r\n          <Field>\r\n            <Label>Title</Label>\r\n            <Input\r\n              control={control}\r\n              placeholder=\"Enter your title\"\r\n              name=\"title\"\r\n              required\r\n            ></Input>\r\n          </Field>\r\n          <Field>\r\n            <Label>Slug</Label>\r\n            <Input\r\n              control={control}\r\n              placeholder=\"Enter your slug\"\r\n              name=\"slug\"\r\n            ></Input>\r\n          </Field>\r\n        </div>\r\n        <div className=\"form-layout\">\r\n          <Field>\r\n            <Label>Image</Label>\r\n            <ImageUpload\r\n              className=\"h-[250px]\"\r\n              onChange={handleSelectImage}\r\n              handleDeleteImage={handleDeleteImage}\r\n              progress={progress}\r\n              image={image}\r\n            ></ImageUpload>\r\n          </Field>\r\n          <Field>\r\n            <Label>Category</Label>\r\n            <Dropdown>\r\n              <Dropdown.Select placeholder=\"Select the category\"></Dropdown.Select>\r\n              <Dropdown.List>\r\n                {categories.length > 0 &&\r\n                  categories.map((item) => (\r\n                    <Dropdown.Option\r\n                      key={item.id}\r\n                      onClick={() => handleClickOption(item)}\r\n                    >\r\n                      {item.name}\r\n                    </Dropdown.Option>\r\n                  ))}\r\n              </Dropdown.List>\r\n            </Dropdown>\r\n            {selectCategory?.name && (\r\n              <span className=\"inline-block p-3 rounded-lg bg-green-50 text-sm text-green-600 font-medium\">\r\n                {selectCategory?.name}\r\n              </span>\r\n            )}\r\n          </Field>\r\n        </div>\r\n        <div className=\"mb-10\">\r\n          <Field>\r\n            <Label>Content</Label>\r\n            <div className=\"w-full entry-content\">\r\n              <ReactQuill\r\n                modules={modules}\r\n                theme=\"snow\"\r\n                value={content}\r\n                onChange={setContent}\r\n              />\r\n            </div>\r\n          </Field>\r\n        </div>\r\n        <div className=\"form-layout\">\r\n          <Field>\r\n            <Label>Feature post</Label>\r\n            <Toggle\r\n              on={watchHot === true}\r\n              onClick={() => setValue(\"hot\", !watchHot)}\r\n            ></Toggle>\r\n          </Field>\r\n          <Field>\r\n            <Label>Status</Label>\r\n            <FieldCheckboxes>\r\n              <Radio\r\n                name=\"status\"\r\n                control={control}\r\n                checked={Number(watchStatus) === postStatus.APPROVED}\r\n                value={postStatus.APPROVED}\r\n              >\r\n                Approved\r\n              </Radio>\r\n              <Radio\r\n                name=\"status\"\r\n                control={control}\r\n                checked={Number(watchStatus) === postStatus.PENDING}\r\n                value={postStatus.PENDING}\r\n              >\r\n                Pending\r\n              </Radio>\r\n              <Radio\r\n                name=\"status\"\r\n                control={control}\r\n                checked={Number(watchStatus) === postStatus.REJECTED}\r\n                value={postStatus.REJECTED}\r\n              >\r\n                Reject\r\n              </Radio>\r\n            </FieldCheckboxes>\r\n          </Field>\r\n        </div>\r\n        <Button\r\n          type=\"submit\"\r\n          className=\"mx-auto w-[250px]\"\r\n          isLoading={isSubmitting}\r\n          disabled={isSubmitting}\r\n        >\r\n          Update post\r\n        </Button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PostUpdate;\r\n","export const imgbbAPI =\r\n\"https://api.imgbb.com/1/upload?key=de365e406f31414674096a7d8e9babb8\";\r\n\r\n"],"names":["Quill","register","ImageUploader","PostUpdate","params","useSearchParams","postId","get","content","setContent","useState","control","watch","setValue","handleSubmit","getValues","reset","formState","isValid","isSubmitting","useForm","mode","defaultValues","title","slug","status","category","hot","image","user","imageUrl","imageName","setImage","progress","handleSelectImage","handleDeleteImage","useFirebaseImage","async","colRef","doc","db","updateDoc","watchStatus","watchHot","useEffect","docRef","docSnapshot","getDoc","_docSnapshot$data","_docSnapshot$data2","data","setSelectCategory","fetchData","categories","setCategories","selectCategory","collection","q","query","where","querySnapshot","getDocs","result","forEach","push","id","getCategoriesData","modules","useMemo","toolbar","header","list","imageUploader","upload","bodyFormData","FormData","append","file","response","axios","method","url","headers","console","log","_jsxs","_Fragment","children","_jsx","DashboardHeading","desc","onSubmit","values","Number","slugify","lower","toast","success","className","Field","Label","Input","placeholder","name","required","ImageUpload","onChange","Dropdown","Select","List","length","map","item","Option","onClick","docData","handleClickOption","ReactQuill","theme","value","Toggle","on","FieldCheckboxes","Radio","checked","postStatus","APPROVED","PENDING","REJECTED","Button","type","isLoading","disabled"],"sourceRoot":""}