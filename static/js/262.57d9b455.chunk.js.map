{"version":3,"file":"static/js/262.57d9b455.chunk.js","mappings":"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","sources":["components/loading/LoadingSpinner.js","components/button/Button.js","components/field/Field.js","components/input/Input.js","components/icon/IconEyeOpen.js","components/icon/IconEyeClose.js","components/input/InputPasswordToggle.js","components/label/Label.js","components/label/LabelStatus.js","pages/AuthenticationPage.js","pages/SignInPage.js"],"sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst SpinnerStyles = styled.div`\r\n  width: ${(props) => props.size};\r\n  height: ${(props) => props.size};\r\n  border: ${(props) => props.borderSize} solid white;\r\n  border-top: ${(props) => props.borderSize} solid transparent;\r\n  border-bottom: ${(props) => props.borderSize} solid transparent;\r\n  border-radius: 100rem;\r\n  display: inline-block;\r\n  animation: spinner 1s infinite linear;\r\n  @keyframes spinner {\r\n    100% {\r\n      transform: rotate(360deg);\r\n    }\r\n  }\r\n`;\r\nconst LoadingSpinner = ({ size = \"40px\", borderSize=\"5px\"}) => {\r\n  return <SpinnerStyles size={size} borderSize={borderSize}></SpinnerStyles>;\r\n};\r\n\r\nexport default LoadingSpinner;\r\n","import { LoadingSpinner } from \"components/loading\";\r\nimport React from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst ButtonStyles = styled.button`\r\n  cursor: pointer;\r\n  padding: 0 25px;\r\n  line-height: 1;\r\n  border-radius: 8px;\r\n  font-weight: 600;\r\n  font-size: 16px;\r\n  height: ${(props) => props.height || \"66px\"};\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  ${(props) =>\r\n    props.kind === \"secondary\" &&\r\n    css`\r\n      color: ${(props) => props.theme.primary};\r\n      background-color: white;\r\n    `};\r\n  ${(props) =>\r\n    props.kind === \"primary\" &&\r\n    css`\r\n      color: white;\r\n      background-image: linear-gradient(\r\n        to right bottom,\r\n        ${(props) => props.theme.primary},\r\n        ${(props) => props.theme.secondary}\r\n      );\r\n    `};\r\n    ${(props) =>\r\n    props.kind === \"ghost\" &&\r\n    css`\r\n      color: ${(props) => props.theme.primary};\r\n      background-color: rgba(29, 192, 113, 0.1);\r\n    `};\r\n  &:disabled {\r\n    opacity: 0.5;\r\n    pointer-events: none;\r\n  }\r\n`;\r\n\r\nconst Button = ({\r\n  type = \"button \",\r\n  onClick = () => {},\r\n  children,\r\n  kind = \"primary\",\r\n  ...props\r\n}) => {\r\n  const { isLoading, to } = props;\r\n  const child = !!isLoading ? <LoadingSpinner></LoadingSpinner> : children;\r\n  if (to !== \"\" && typeof to === \"string\") {\r\n    return (\r\n      <NavLink to={to} className=\"inline-block\">\r\n        <ButtonStyles type={type} kind={kind} onClick={onClick} {...props}>\r\n          {child}\r\n        </ButtonStyles>\r\n      </NavLink>\r\n    );\r\n  }\r\n  return (\r\n    <ButtonStyles type={type} kind={kind} onClick={onClick} {...props}>\r\n      {child}\r\n    </ButtonStyles>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  type: PropTypes.oneOf([\"button\", \"submit\"]),\r\n  isLoading: PropTypes.bool,\r\n  onClick: PropTypes.func,\r\n  children: PropTypes.node,\r\n  kind: PropTypes.oneOf([\"primary\", \"secondary\",\"ghost\"]),\r\n};\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst FieldSlytes = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  row-gap: 20px;\r\n  margin-bottom: 40px;\r\n  &:last-child {\r\n    margin-bottom: 0;\r\n  }\r\n`;\r\nconst Field = ({ children }) => {\r\n  return <FieldSlytes>{children}</FieldSlytes>;\r\n};\r\n\r\nexport default Field;\r\n","import React from \"react\";\r\nimport { useController } from \"react-hook-form\";\r\nimport styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n\r\nconst InputStyles = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  input {\r\n    width: 100%;\r\n    padding: ${(props) =>\r\n      props.hasIcon ? \"16px 60px 16px 20px\" : \"16px 20px\"};\r\n    padding: 20px;\r\n    background-color: ${(props) => props.theme.grayLight};\r\n    border-radius: 8px;\r\n    font-weight: 500;\r\n    transition: all 0.2s linear;\r\n    border: 1px solid transparent;\r\n  }\r\n\r\n  input:focus {\r\n    background-color: white;\r\n    border-color: ${(props) => props.theme.primary};\r\n  }\r\n\r\n  input::-webkit-input-placeholder {\r\n    color: #84878b;\r\n  }\r\n  input::-moz-input-placeholder {\r\n    color: #84878b;\r\n  }\r\n\r\n  .input-icon-eye {\r\n    position: absolute;\r\n    right: 20px;\r\n    top: 50%;\r\n    transform: translateY(-50%);\r\n    cursor: pointer;\r\n  }\r\n`;\r\nconst Input = ({ name = \"\", type = \"text\", children, control, ...props }) => {\r\n  const { field } = useController({\r\n    control,\r\n    name,\r\n    defaultValue: \"\",\r\n  });\r\n  return (\r\n    <InputStyles hasIcon={children ? true : false}>\r\n      <input id={name} type={type} {...field} {...props} />\r\n      {children ? <div className=\"input-icon-eye\">{children}</div> : null}\r\n    </InputStyles>\r\n  );\r\n};\r\n\r\nInput.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  type: PropTypes.string,\r\n  children: PropTypes.any,\r\n  control: PropTypes.any.isRequired,\r\n}\r\n\r\nexport default Input;\r\n","import React from \"react\";\r\n\r\nconst IconEyeOpen = ({ className = \"\", onClick = () => {} }) => {\r\n  return (\r\n    <span className={className} onClick={onClick}>\r\n      <svg\r\n        width=\"22\"\r\n        height=\"14\"\r\n        viewBox=\"0 0 22 14\"\r\n        fill=\"none\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n      >\r\n        <path\r\n          d=\"M14.5 1.62156C16.8312 2.50868 18.7928 4.24569 20.5245 6.37837C20.8098 6.72982 20.8099 7.23217 20.5245 7.58361C17.9889 10.7065 14.96 12.981 11 12.981C7.04003 12.981 4.01115 10.7065 1.4755 7.58361C1.19014 7.23216 1.19016 6.72981 1.47551 6.37837C3.69735 3.64197 6.29789 1.55697 9.5717 1.0828C9.75303 1.05654 9.93641 1.03522 10.1219 1.019L10.561 1\"\r\n          stroke=\"#999999\"\r\n          strokeWidth=\"1.4\"\r\n          strokeLinecap=\"round\"\r\n          strokeLinejoin=\"round\"\r\n        />\r\n        <path\r\n          d=\"M13.5 6.98096C13.5 8.36167 12.3807 9.48096 11 9.48096C9.61929 9.48096 8.5 8.36167 8.5 6.98096C8.5 5.60025 9.61929 4.48096 11 4.48096C12.3807 4.48096 13.5 5.60025 13.5 6.98096Z\"\r\n          stroke=\"#999999\"\r\n          strokeWidth=\"1.4\"\r\n          strokeLinecap=\"round\"\r\n          strokeLinejoin=\"round\"\r\n        />\r\n      </svg>\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default IconEyeOpen;\r\n","import React from \"react\";\r\n\r\nconst IconEyeClose = ({ className = \"\", onClick = () => {} }) => {\r\n  return (\r\n    <span className={className} onClick={onClick}>\r\n      <svg\r\n        width=\"22\"\r\n        height=\"20\"\r\n        viewBox=\"0 0 22 20\"\r\n        fill=\"none\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n      >\r\n        <path\r\n          d=\"M13.5356 8.46454C13.7677 8.69669 13.9519 8.97229 14.0775 9.27561C14.2032 9.57892 14.2678 9.90401 14.2678 10.2323C14.2678 10.5606 14.2031 10.8857 14.0775 11.189C13.9518 11.4923 13.7677 11.7679 13.5355 12.0001C13.3034 12.2322 13.0278 12.4164 12.7245 12.542C12.4211 12.6676 12.0961 12.7323 11.7678 12.7323C11.4394 12.7323 11.1144 12.6676 10.811 12.5419C10.5077 12.4163 10.2321 12.2322 10 12\"\r\n          stroke=\"#999999\"\r\n          strokeWidth=\"1.5\"\r\n          strokeLinecap=\"round\"\r\n        />\r\n        <path\r\n          d=\"M11 4C7.04003 4 4.01115 6.27449 1.4755 9.39738C1.19014 9.74883 1.19009 10.2511 1.47544 10.6025C2.18711 11.479 2.93763 12.2887 3.73669 13M6.74043 15.0348C8.03446 15.6495 9.44549 16 11 16C11.2884 16 11.5719 15.9879 11.8507 15.9643L12.2607 15.9122M15.7029 5.18844C17.5178 6.15443 19.0991 7.64187 20.5245 9.39741C20.8099 9.74885 20.8099 10.2512 20.5245 10.6026C19.1774 12.2617 17.6911 13.6813 16 14.6476\"\r\n          stroke=\"#999999\"\r\n          strokeWidth=\"1.4\"\r\n          strokeLinecap=\"round\"\r\n          strokeLinejoin=\"round\"\r\n        />\r\n        <path\r\n          d=\"M19.1217 1.11547L1.9998 18.9996\"\r\n          stroke=\"#999999\"\r\n          strokeWidth=\"1.5\"\r\n          strokeLinecap=\"round\"\r\n          strokeLinejoin=\"round\"\r\n        />\r\n      </svg>\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default IconEyeClose;\r\n","import React, { useState } from \"react\";\r\nimport Input from \"./Input\";\r\nimport { IconEyeClose, IconEyeOpen } from \"components/icon\";\r\n\r\nconst InputPasswordToggle = ({ control }) => {\r\n  const [togglePassword, setTogglePassword] = useState(false);\r\n  if (!control) return null;\r\n  return (\r\n    <>\r\n      <Input\r\n        type={togglePassword ? \"text\" : \"password\"}\r\n        name=\"password\"\r\n        placeholder=\"Enter your password\"\r\n        control={control}\r\n      >\r\n        {!togglePassword ? (\r\n          <IconEyeClose onClick={() => setTogglePassword(true)}></IconEyeClose>\r\n        ) : (\r\n          <IconEyeOpen onClick={() => setTogglePassword(false)}></IconEyeOpen>\r\n        )}\r\n      </Input>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InputPasswordToggle;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst LabelStyles = styled.label`\r\n  color: ${(props) => props.theme.grayDark};\r\n  font-weight: 600;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst Label = ({ htmlFor = \"\", children, ...props }) => {\r\n  return (\r\n    <LabelStyles htmlFor={htmlFor} {...props}>\r\n      {children}\r\n    </LabelStyles>\r\n  );\r\n};\r\n\r\nexport default Label;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst LabelStatusStyles = styled.span`\r\n  display: inline-block;\r\n  padding: 10px 15px;\r\n  border-radius: 8px;\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n`;\r\n/**\r\n *\r\n * @param type - \"default\" \"success\" \"warning\" \"danger\"\r\n * @returns\r\n */\r\nconst LabelStatus = ({ children, type = \"default\" }) => {\r\n  let styleClassName = \"text-gray-500 bg-gray-100\";\r\n  switch (type) {\r\n    case \"success\":\r\n      styleClassName = \"text-green-500 bg-green-100\";\r\n      break;\r\n    case \"warning\":\r\n      styleClassName = \"text-orange-500 bg-orange-100\";\r\n      break;\r\n    case \"danger\":\r\n      styleClassName = \"text-red-500 bg-red-100\";\r\n      break;\r\n\r\n    default:\r\n      break;\r\n  }\r\n  return (\r\n    <LabelStatusStyles className={styleClassName}>{children}</LabelStatusStyles>\r\n  );\r\n};\r\nLabelStatus.propTypes = {\r\n  children: PropTypes.node,\r\n  type: PropTypes.oneOf([\"default\", \"success\", \"warning\", \"danger\"]).isRequired,\r\n};\r\nexport default LabelStatus;","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst AuthenticationPageStyles = styled.div`\r\n  min-height: 100vh;\r\n  padding: 150px;\r\n  .logo {\r\n    margin: 0 auto 20px;\r\n  }\r\n  .heading {\r\n    text-align: center;\r\n    color: ${(props) => props.theme.primary};\r\n    font-weight: bold;\r\n    font-size: 40px;\r\n    margin-bottom: 60px;\r\n  }\r\n  .form {\r\n    max-width: 600px;\r\n\r\n  }\r\n  .have-account {\r\n    margin-bottom: 20px;\r\n    a {\r\n      display: inline-block;\r\n      color: ${(props) => props.theme.primary};\r\n      font-weight: 500;\r\n    }\r\n  }\r\n`;\r\n\r\nconst AuthenticationPage = ({ children }) => {\r\n  return (\r\n    <AuthenticationPageStyles>\r\n      <div className=\"container grid grid-cols-1 lg:grid-cols-2\">\r\n        <div className=\"text-center mt-9 mr-12\">\r\n          <NavLink to=\"/\" className=\"inline-block\">\r\n            <img srcSet=\"/logo.png 1x\" alt=\"mk-blogging\" className=\"logo\" />\r\n          </NavLink>\r\n        <h1 className=\"heading\">MK Blogging</h1>\r\n        </div>\r\n        {children}\r\n      </div>\r\n    </AuthenticationPageStyles>\r\n  );\r\n};\r\n\r\nexport default AuthenticationPage;","import { useAuth } from \"contexts/auth-context\";\r\nimport React, { useEffect } from \"react\";\r\nimport { NavLink, useNavigate } from \"react-router-dom\";\r\nimport AuthenticationPage from \"./AuthenticationPage\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport Field from \"components/field/Field\";\r\nimport { Label } from \"components/label\";\r\nimport { Input } from \"components/input\";\r\nimport { Button } from \"components/button\";\r\nimport * as yup from \"yup\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport { toast } from \"react-toastify\";\r\nimport { signInWithEmailAndPassword } from \"firebase/auth\";\r\nimport { auth } from \"firebase-app/firebase-config\";\r\nimport InputPasswordToggle from \"components/input/InputPasswordToggle\";\r\n\r\nconst schema = yup.object({\r\n  email: yup\r\n    .string()\r\n    .email(\"Please enter valid email address\")\r\n    .required(\"Please enter your email address\"),\r\n  password: yup\r\n    .string()\r\n    .min(8, \"Your password must be at least 8 characters or greater\")\r\n    .required(\"Please enter your password\"),\r\n});\r\n\r\nconst SignInPage = () => {\r\n  const {\r\n    handleSubmit,\r\n    control,\r\n    formState: { isValid, isSubmitting, errors },\r\n  } = useForm({\r\n    mode: \"onChange\",\r\n    resolver: yupResolver(schema),\r\n  });\r\n\r\n  useEffect(() => {\r\n    const arrErrors = Object.values(errors);\r\n    if (arrErrors.length > 0) {\r\n      toast.error(arrErrors[0]?.message, {\r\n        pauseOnHover: false,\r\n        delay: 0,\r\n      });\r\n    }\r\n  }, [errors]);\r\n\r\n  const { userInfo } = useAuth();\r\n  console.log(\"User Info in SignInPage:\", userInfo);\r\n\r\n  const navigate = useNavigate();\r\n  useEffect(() => {\r\n    document.title = \"Login Page\";\r\n    if (userInfo?.email) navigate(\"/\");\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [userInfo]);\r\n  const handleSignIn = async (values) => {\r\n    if (!isValid) return;\r\n    await signInWithEmailAndPassword(auth, values.email, values.password);\r\n    navigate(\"/\");\r\n  };\r\n\r\n  //\r\n  return (\r\n    <AuthenticationPage>\r\n      <form\r\n        className=\"form\"\r\n        onSubmit={handleSubmit(handleSignIn)}\r\n        autoComplete=\"off\"\r\n      >\r\n        <Field>\r\n          <Label htmlFor=\"email\">Email address</Label>\r\n          <Input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            placeholder=\"Enter your email address\"\r\n            control={control}\r\n          ></Input>\r\n        </Field>\r\n        <Field>\r\n          <Label htmlFor=\"password\">Password</Label>\r\n          <InputPasswordToggle control={control}></InputPasswordToggle>\r\n        </Field>\r\n        <div className=\"have-account\">\r\n          You have not had an account?{\" \"}\r\n          <NavLink to={\"/sign-up\"}>Register an account</NavLink>\r\n        </div>\r\n        <Button\r\n          type=\"submit\"\r\n          className=\"w-full max-w-[300px] mx-auto\"\r\n          isLoading={isSubmitting}\r\n          disabled={isSubmitting}\r\n        >\r\n          Sign In\r\n        </Button>\r\n      </form>\r\n    </AuthenticationPage>\r\n  );\r\n};\r\n\r\nexport default SignInPage;\r\n"],"names":["SpinnerStyles","styled","div","_templateObject","_taggedTemplateLiteral","props","size","borderSize","_ref","_jsx","ButtonStyles","button","height","kind","css","_templateObject2","theme","primary","_templateObject3","secondary","_templateObject4","type","onClick","children","isLoading","to","child","LoadingSpinner","NavLink","className","FieldSlytes","InputStyles","hasIcon","grayLight","name","control","field","useController","defaultValue","_jsxs","id","width","viewBox","fill","xmlns","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","togglePassword","setTogglePassword","useState","_Fragment","Input","placeholder","IconEyeOpen","IconEyeClose","LabelStyles","label","grayDark","htmlFor","LabelStatusStyles","span","styleClassName","AuthenticationPageStyles","srcSet","alt","schema","yup","email","required","password","min","SignInPage","handleSubmit","formState","isValid","isSubmitting","errors","useForm","mode","resolver","yupResolver","useEffect","arrErrors","Object","values","_arrErrors$","length","toast","error","message","pauseOnHover","delay","userInfo","useAuth","console","log","navigate","useNavigate","document","title","AuthenticationPage","onSubmit","async","signInWithEmailAndPassword","auth","autoComplete","Field","Label","InputPasswordToggle","Button","disabled"],"sourceRoot":""}